<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.demo</groupId>
  <artifactId>TestingExample</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <packaging>war</packaging>
  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <maven-compiler.target>11</maven-compiler.target>
    <maven-compiler.source>11</maven-compiler.source>
    <junit.jupiter.version>5.5.0</junit.jupiter.version>
  </properties>
 
  <dependencies>
    <!-- Spring MVC Dependency -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>4.3.0.RELEASE</version>
    </dependency>
    <!-- Spring ORM -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>4.3.0.RELEASE</version>
    </dependency>
    <!-- Hibernate ORM -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>5.2.11.Final</version>
    </dependency>
    <!-- Hibernate-C3P0 Integration -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
      <version>5.2.11.Final</version>
    </dependency>
    <!-- c3p0 -->
    <dependency>
      <groupId>com.mchange</groupId>
      <artifactId>c3p0</artifactId>
      <version>0.9.5.4</version>
    </dependency>
    <!-- Mysql Connector -->
    <dependency>
	    <groupId>mysql</groupId>
	    <artifactId>mysql-connector-java</artifactId>
	    <scope>runtime</scope>
	    <version>8.0.13</version>
	</dependency>
    <!-- Jackson API for JSON -->
	<dependency>
	    <groupId>com.fasterxml.jackson.core</groupId>
	    <artifactId>jackson-databind</artifactId>
	    <version>2.9.9.1</version>
	</dependency>
	
	    
	<dependency>
	    <groupId>log4j</groupId>
	    <artifactId>log4j</artifactId>
	    <version>1.2.17</version>
	</dependency>
	    
    <!-- Servlet Dependency -->
    <dependency>
 		<groupId>javax.servlet</groupId>
 		<artifactId>javax.servlet-api</artifactId>
 		<version>4.0.1</version>
 	</dependency>
     
    <dependency>
	    <groupId>javax.xml.bind</groupId>
	    <artifactId>jaxb-api</artifactId>
	    <version>2.2.11</version>
	</dependency>
	<dependency>
	    <groupId>com.sun.xml.bind</groupId>
	    <artifactId>jaxb-core</artifactId>
	    <version>2.2.11</version>
	</dependency>
	<dependency>
	    <groupId>com.sun.xml.bind</groupId>
	    <artifactId>jaxb-impl</artifactId>
	    <version>2.2.11</version>
	</dependency>
	<dependency>
	    <groupId>javax.activation</groupId>
	    <artifactId>activation</artifactId>
	    <version>1.1.1</version>
	</dependency>
	
	<!-- Tests dependencies -->
	
	<!-- Contains MockMvc and other test classes that can be used -->
	<!-- to perform and validate requests on a specific endpoint. -->
	<dependency>
	    <groupId>org.springframework</groupId>
	    <artifactId>spring-test</artifactId>
	    <version>5.1.8.RELEASE</version>
	</dependency>

    <!-- Implementation of the TestEngine API for JUnit Jupiter -->
    <!-- Serves as a foundation for launching testing frameworks on the JVM -->
    <dependency>
	    <groupId>org.junit.jupiter</groupId>
	    <artifactId>junit-jupiter-engine</artifactId>
	    <version>5.5.0</version>
	</dependency>
	
	<!-- API for writing tests using JUnit Jupiter -->
	<!-- Provides features such as annotations and assertions -->
    <dependency>
    	<groupId>org.junit.jupiter</groupId>
    	<artifactId>junit-jupiter-api</artifactId>
    	<version>5.5.0</version>
 	</dependency>
 	
 	<!-- Mocking framework for mocking data. -->
 	<dependency>
 		<groupId>org.mockito</groupId>
	    <artifactId>mockito-core</artifactId>
	    <version>2.28.2</version>
	</dependency>
	
	<!-- Provides additional assertion methods -->
	<dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>1.3</version>
    </dependency>
	
	<!-- Using jsonPath() to access the response body assertions -->
	<!-- and to inspect a specific subset of the body --> 
	<dependency>
	    <groupId>com.jayway.jsonpath</groupId>
	    <artifactId>json-path</artifactId>
	    <version>2.4.0</version>
	</dependency>
	
	<dependency>
	    <groupId>com.jayway.jsonpath</groupId>
	    <artifactId>json-path-assert</artifactId>
	    <version>2.4.0</version>
	</dependency>
	
  </dependencies>
  <build>
    <plugins>
    
    	<!-- Run JUnit test cases from command line-->
    	<plugin>
        	<artifactId>maven-compiler-plugin</artifactId>
	        <version>3.5.1</version>
	        <configuration>
	          <source>1.8</source>
	          <target>1.8</target>
	        </configuration>
      	</plugin>
      	
      	<!-- The Surefire Plugin is used to execute the unit tests -->
      	<plugin>
      		<groupId>org.apache.maven.plugins</groupId>
          	<artifactId>maven-surefire-plugin</artifactId>
          	<version>3.0.0-M3</version>
      	</plugin>
      
       	<plugin>
          	<groupId>org.apache.maven</groupId>
          	<artifactId>maven-plugin-api</artifactId>
          	<version>3.6.1</version>
     	</plugin>
      
     	<!-- JaCoCo (Java Code Coverage Library) for generating code coverage report-->
      	<plugin>
      		<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
			<version>0.8.2</version>
			<executions>
				<execution>
					<goals>
						<goal>prepare-agent</goal>
					</goals>
				</execution>
			<!-- attached to Maven test phase -->
			<execution>
				<id>report</id>
				<phase>test</phase>
				<goals>
					<goal>report</goal>
				</goals>
			</execution>
		</executions>
	  </plugin>
      
      <!-- Embedded Apache Tomcat required for testing web application -->
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <path>/</path>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>